<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Julien Limoges</title>
    <link>https://limoges.io/posts/</link>
    <description>Recent content in Posts on Julien Limoges</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <lastBuildDate>Sun, 05 Feb 2017 07:51:49 +0100</lastBuildDate>
    
	<atom:link href="https://limoges.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Static code analysis using Go vet</title>
      <link>https://limoges.io/posts/using-golang-static-analysis/</link>
      <pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://limoges.io/posts/using-golang-static-analysis/</guid>
      <description>If you&amp;rsquo;ve been using Go for a while you might have heard about vet. To vet means to make a careful and critical examination of something. This is a pretty good name for what the tool does.
Vet is a pretty interesting tool. For people familiar with gcc based tools, it can be compared to the warnings gcc emits. It inspects source files and outputs recommendation or &amp;ldquo;warnings&amp;rdquo;.
Invoking vet You can technically use go vet, but its interface is awkward for most.</description>
    </item>
    
    <item>
      <title>What&#39;s that? Can you repeat?</title>
      <link>https://limoges.io/posts/dont-repeat-yourself/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://limoges.io/posts/dont-repeat-yourself/</guid>
      <description>Don&amp;rsquo;t repeat yourself is a pretty popular principle of software development.
It has (funnily) been repeated, over and over and over again. To the point where it seems to be the most important principle to some software communities.
Unfortunately, the principle is flawed. It is a good idea to try and group repetitive code. But everything must be done in moderation. Sometimes, DRY just makes it damn more complicated to understand your code.</description>
    </item>
    
    <item>
      <title>Virtualization technology and containers</title>
      <link>https://limoges.io/posts/containers/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://limoges.io/posts/containers/</guid>
      <description>The world of software has been hearing about containers, docker, and docker for the past few years.
Probably to the most promoted and hyped technology since, maybe, the iPhone, one should ask himself, what is Docker?
(2017: Okay. Microservices, k8s - that&amp;rsquo;s kubernetes for the rest of us, are also strong contenders.)
Docker is a somewhat recent technology, or tool, to allow building a workload and running that workload on a host of different machines.</description>
    </item>
    
    <item>
      <title>A history of encodings before UTF-8</title>
      <link>https://limoges.io/posts/utf8/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://limoges.io/posts/utf8/</guid>
      <description>Google announced this year that UTF-8 had finally overtook all other character encoding, accounting for the most used character encoding on the internet.
This is a quite important event for the world, one which may help communication across the world. Still not sure? Follow me down the character encoding rabbit hole.
The internet, circa 1999. If you&amp;rsquo;ve used your computer to browse the internet in the last 10 years, you&amp;rsquo;ve probably visited a page which had all kinds of weird squigly characters.</description>
    </item>
    
  </channel>
</rss>